import{_ as e,c as o,o as l,V as i}from"./chunks/framework.LLn18gvy.js";const h=JSON.parse('{"title":"Web Components","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Web-Components.md","filePath":"docs/Web-Components.md","lastUpdated":1705660487000}'),c={name:"docs/Web-Components.md"},d=i('<h1 id="web-components" tabindex="-1">Web Components <a class="header-anchor" href="#web-components" aria-label="Permalink to &quot;Web Components&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>此文档为 LiteLoaderQQNT 1.0.0 编写</p></div><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>LiteLoaderQQNT 使用 Web Components 封装了 QQNT 设置界面的一些组件，使你能够简单且快速的构建 QQNT 原生样式的插件配置界面</p><p>自定义标签全部由 <code>setting-</code> 开头，自定义属性全部由 <code>data-</code> <code>is-</code> 开头并且是响应式，以下是已封装实现的组件标签以及属性</p><ul><li><code>setting-section</code> - 每一节的设置 <ul><li><code>data-title</code> - 标题</li></ul></li><li><code>setting-panel</code> - 选项容器</li><li><code>setting-list</code> - 选项列表 <ul><li><code>data-direction</code> - 排列方向 <ul><li><code>column</code> - 纵向</li><li><code>row</code> - 横向</li></ul></li><li><code>is-collapsible</code> - 是否为可折叠列表 <ul><li><code>data-title</code> - 标题</li></ul></li></ul></li><li><code>setting-item</code> - 选项条目 <ul><li><code>data-direction</code> - 排列方向 <ul><li><code>column</code> - 纵向</li><li><code>row</code> - 横向</li></ul></li></ul></li><li><code>setting-select</code> - 下拉选择框</li><li><code>setting-option</code> - 选择框选项 <ul><li><code>data-value</code> - 数据值</li><li><code>is-selected</code> - 是否为已选择</li></ul></li><li><code>setting-switch</code> - 开关按钮 <ul><li><code>is-active</code> - 是否为激活</li></ul></li><li><code>setting-button</code> - 普通按钮 <ul><li><code>data-type</code> - 类型 <ul><li><code>primary</code> - 主要</li><li><code>secondary</code> - 次要</li></ul></li><li><code>is-disabled</code> - 是否为禁用</li></ul></li><li><code>setting-text</code> - 文本 <ul><li><code>data-type</code> - 类型 <ul><li><code>secondary</code> - 次要</li></ul></li></ul></li><li><code>setting-divider</code> - 分割线 <ul><li><code>data-orientation</code> - 方向 <ul><li><code>horizontal</code> - 水平</li><li><code>vertical</code> - 垂直</li></ul></li></ul></li></ul><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2>',7),t=[d];function a(n,s,r,u,p,m){return l(),o("div",null,t)}const b=e(c,[["render",a]]);export{h as __pageData,b as default};
