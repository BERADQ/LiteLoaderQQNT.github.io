import{_ as e,c as t,o,V as i}from"./chunks/framework.LLn18gvy.js";const b=JSON.parse('{"title":"Web Components","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Web-Components.md","filePath":"docs/Web-Components.md","lastUpdated":1705607322000}'),n={name:"docs/Web-Components.md"},a=i('<h1 id="web-components" tabindex="-1">Web Components <a class="header-anchor" href="#web-components" aria-label="Permalink to &quot;Web Components&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>此文档为 LiteLoaderQQNT 1.0.0 编写</p></div><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>LiteLoaderQQNT 使用 Web Components 封装了 QQNT 设置界面的一些组件，使你能够简单且快速的构建 QQNT 原生样式的插件配置界面</p><p>自定义标签全部由 <code>setting-</code> 开头，自定义属性全部由 <code>data-</code> <code>is-</code> 开头并且是响应式，以下是已封装实现的组件标签名</p><ul><li>setting-section - 每一节的设置</li><li>setting-panel - 选项容器</li><li>setting-list - 选项列表</li><li>setting-item - 选项条目</li><li>setting-select - 下拉选择框</li><li>setting-option - 选择框选项</li><li>setting-switch - 开关按钮</li><li>setting-button - 普通按钮</li><li>setting-text - 文本</li><li>setting-divider - 分割线</li></ul><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><p>正在施工中...</p>',8),s=[a];function l(c,d,r,p,_,m){return o(),t("div",null,s)}const u=e(n,[["render",l]]);export{b as __pageData,u as default};
