import{_ as o,E as l,c as r,m as e,J as d,V as i,a,o as s}from"./chunks/framework.LLn18gvy.js";const g=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[],"relativePath":"guide/install.md","filePath":"guide/install.md","lastUpdated":1705656502000}'),c={name:"guide/install.md"},n=i('<h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>此文档为 LiteLoaderQQNT 1.0.0 编写</p></div><h2 id="下载项目" tabindex="-1">下载项目 <a class="header-anchor" href="#下载项目" aria-label="Permalink to &quot;下载项目&quot;">​</a></h2><p><a href="https://github.com/LiteLoaderQQNT/LiteLoaderQQNT/releases/latest" target="_blank" rel="noreferrer">项目下载地址</a></p><p>将下载到的 <code>LiteLoaderQQNT.zip</code> 文件解压到任意位置 (比如你存放软件/工具的文件夹) 并记住该路径稍后会用到。</p><h2 id="根据系统选择安装方式" tabindex="-1">根据系统选择安装方式 <a class="header-anchor" href="#根据系统选择安装方式" aria-label="Permalink to &quot;根据系统选择安装方式&quot;">​</a></h2><details class="details custom-block"><summary>windows</summary><h3 id="修补-qq-exe" tabindex="-1">修补 QQ.exe <a class="header-anchor" href="#修补-qq-exe" aria-label="Permalink to &quot;修补 QQ.exe&quot;">​</a></h3><p>由于 Windows 上的 QQNT 添加了校验，需要执行以下步骤来避免程序闪退：</p><ol><li><p>右击 QQ 图标，选择 <code>打开文件位置</code> 以找到安装目录，复制当前路径，暂时不要关闭该文件夹。</p></li><li><p>根据 QQ 版本选择 Patch 程序。32 位版本使用 <code>QQNTPatcher_x86.exe</code>，64 位版本使用 <code>QQNTPatcher_x64.exe</code>。</p></li></ol><blockquote><p>如何确定 QQ 版本：查看打开的安装路径，如果其中包含 <code>Program Files (x86)</code> 则为 32 位，没有则是 64 位</p></blockquote><ol start="3"><li>打开 <code>QQNTPatcher_*.exe</code> 程序会弹出文件选择框，粘贴 QQ 的安装路径并选择该目录下的 QQ.exe 文件。等待终端显示 <code>Patched!</code> 后关闭窗口。</li></ol></details><h4 id="插入加载器代码" tabindex="-1">插入加载器代码 <a class="header-anchor" href="#插入加载器代码" aria-label="Permalink to &quot;插入加载器代码&quot;">​</a></h4>',8),h=e("li",null,[e("p",null,[a("打开 QQ 安装目录，依次进入 "),e("code",null,"resources > app > app_launcher"),a("。")])],-1),Q=e("li",null,[e("p",null,[a("用记事本或其他文本编辑器打开 "),e("code",null,"index.js"),a("。")])],-1),u=e("p",null,[a("在文件顶部插入 "),e("code",null,'require("LiteLoaderQQNT 目录位置");'),a(" 将其中的 "),e("code",null,"LiteLoaderQQNT 目录位置"),a(" 替换为 "),e("code",null,"LiteLoaderQQNT"),a(" 文件夹路径，保存该文件。")],-1),_=e("li",null,[e("p",null,"重新启动 QQ 即可在设置界面看到 LiteLoaderQQNT 设置选项，安装完成，玩的开心！")],-1),p=e("h4",{id:"寻找liteloaderqqnt插件",tabindex:"-1"},[a("寻找LiteLoaderQQNT插件 "),e("a",{class:"header-anchor",href:"#寻找liteloaderqqnt插件","aria-label":'Permalink to "寻找LiteLoaderQQNT插件"'},"​")],-1),L=e("p",null,"LiteLoaderQQNT的插件基本发布在GitHub,善用搜索可以快速的找到所需插件",-1),m=e("p",null,[a("比如在搜索框键入关键词"),e("code",null,"LiteLoader"),a("和"),e("code",null,"插件"),a("，即可找到大量"),e("a",{href:"https://github.com/search?q=LiteLoader+%E6%8F%92%E4%BB%B6&type=repositories",target:"_blank",rel:"noreferrer"},"LiteLoaderQQNT生态的插件")],-1);function T(x,N,b,q,f,P){const t=l("Badge");return s(),r("div",null,[n,e("ol",null,[h,Q,e("li",null,[u,d(t,{type:"danger",text:"LiteLoaderQQNT 目录位置 的路径符号应为 / 而不是 \\ ",vertical:"middle"})]),_]),p,L,m])}const B=o(c,[["render",T]]);export{g as __pageData,B as default};
